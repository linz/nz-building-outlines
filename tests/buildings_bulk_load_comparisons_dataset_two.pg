------------------------------------------------------------------------------
-- Provide unit testing for buildings_bulk_load comparisons functions
-- with two supplied datasets using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true


BEGIN;

CREATE EXTENSION IF NOT EXISTS pgtap;

SELECT plan(10);


--1----------------------------------------------------------
-- New Buildings contents

SELECT results_eq(
    'SELECT buildings_bulk_load.find_added(2)',
    $$VALUES (2034)$$,
    'Check contents of new buildings table after building comparison function has run'
);

--2----------------------------------------------------------
-- Removed Buildings contents

SELECT results_eq(
    'SELECT buildings_bulk_load.find_removed(2)',
    $$VALUES (1034)$$,
    'Check contents of removed buildings table after building comparison function has run'
);

--3----------------------------------------------------------
-- related

SELECT results_eq(
	'SELECT buildings_bulk_load.find_related(2)',
	$$VALUES ((1036,2035)), ((1037,2035))$$,
	'Check bulk load outlines of related table after buildings comparison function has run'
);

--4------------------------------------------------------
-- matched 

SELECT results_eq(
	'SELECT buildings_bulk_load.find_matched(2)',
	$$VALUES ((1035,2036))$$,
	'Check outlines pairs of matched table after buildings comparison .find_matched function has run'
);

--5----------------------------------------------------------
-- New Buildings contents

SELECT set_has(
    'SELECT bulk_load_outline_id FROM buildings_bulk_load.added ORDER BY bulk_load_outline_id',
    $$VALUES (2034)$$,
    'Check contents of new buildings table after building comparison function has run'
);

--6----------------------------------------------------------
-- Removed Buildings contents

SELECT set_has(
    'SELECT building_outline_id FROM buildings_bulk_load.removed ORDER BY building_outline_id',
    $$VALUES (1034)$$,
    'Check contents of removed buildings table after building comparison function has run'
);

--7----------------------------------------------------------
-- related bulk_load_outline_id

SELECT set_has(
	'SELECT bulk_load_outline_id FROM buildings_bulk_load.related ORDER BY bulk_load_outline_id',
	$$VALUES (2035)$$,
	'Check bulk load outlines of related table after buildings comparison function has run'
);

--8---------------------------------------------------------
-- related building_outline_id

SELECT set_has(
	'SELECT building_outline_id FROM buildings_bulk_load.related ORDER BY building_outline_id',
	$$VALUES (1036), (1037)$$,
	'Check current outlines of related table after buildings comparison function has run'
);

--9------------------------------------------------------
-- Matched bulk_load_outline_id

SELECT set_has(
	'SELECT bulk_load_outline_id FROM buildings_bulk_load.matched ORDER BY bulk_load_outline_id',
	$$VALUES (2036)$$,
	'Check supplied outlines of matched table after buildings comparison function has run'
);

--10-------------------------------------------------------
-- Matched building_outline_id

SELECT set_has(
	'SELECT building_outline_id FROM buildings_bulk_load.matched ORDER BY building_outline_id',
	$$VALUES (1035)$$,
	'Check current outlines of matched table after buildings comparison function has run'
);

--------------------------------------------------------

-- Finish pgTAP testing
SELECT * FROM finish();

