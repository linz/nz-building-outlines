------------------------------------------------------------------------------
-- Provide unit testing for buildings_stage schema using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true


BEGIN;

CREATE EXTENSION postgis;

\i sql/01-create_buildings_schema.sql
\i sql/02-create_buildings_stage_schema.sql
\i sql/03-insert_lookup_table_values.sql
\i sql/04-create_buildings_functions.sql
\i sql/05-buildings_version.sql
\i sql/lds/01-create_buildings_lds_schema.sql
\i tests/insert_test_data_buildings_stage.sql

CREATE EXTENSION pgtap;

-- run the function
SELECT buildings_stage.compare_building_outlines(2);

SELECT plan(13);

--1----------------------------------------------------------
-- Check function exists

SELECT has_function('buildings_stage', 'compare_building_outlines', 'Should have function compare_building_outlines in buildings stage schema.');

--2----------------------------------------------------------
-- New Buildings contents

SELECT results_eq(
    'SELECT supplied_outline_id FROM buildings_stage.new ORDER BY supplied_outline_id',
    $$VALUES (2003),
    		 (2010)$$,
    'Check contents of new buildings table after building comparison function has run'
);

--3----------------------------------------------------------
-- Removed Buildings contents

SELECT results_eq(
    'SELECT building_outline_id FROM buildings_stage.removed ORDER BY building_outline_id',
    $$VALUES (1004),
    		 (1006)$$,
    'Check contents of removed buildings table after building comparison function has run'
);

--4---------------------------------------------------------
-- Merged Buildings contents

SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.merged ORDER BY supplied_outline_id',
	$$VALUES (2005), (2006),
			 (2007), (2008),
			 (2009), (2033)$$,
	'Check contents of merged buildings table after buildings comparison function has run'
);

--5----------------------------------------------------------
-- merge_candidates supplied_outline_id

SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.merge_candidates ORDER BY supplied_outline_id',
	$$VALUES (2005), (2005),
			 (2006), (2006), (2006), 
			 (2007), (2007), (2007), (2007),
			 (2008), (2008), (2008), (2008), (2008),
			 (2009), (2009), (2009), (2009), (2009), (2009),
			 (2033), (2033)$$,
	'Check supplied outlines of merged candidates table after buildings comparison function has run'
);

--6---------------------------------------------------------
-- merge_candidates building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_stage.merge_candidates ORDER BY building_outline_id',
	$$VALUES (1007), (1008), (1009), (1010),
			 (1011), (1012), (1013), (1014),
			 (1015), (1016), (1017), (1018),
			 (1019), (1020), (1021), (1022),
			 (1023), (1024), (1025), (1026),
			 (1032), (1033)$$,
	'Check current outlines of mergered candidates after buildings comparison function has run'
);

--7------------------------------------------------------
-- Split Buildings contents

SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.split ORDER BY supplied_outline_id',
	$$VALUES (2011), (2012), (2013), (2014),
			 (2015), (2016), (2017), (2018),
			 (2019), (2020), (2021), (2022),
			 (2023), (2024), (2025), (2026),
			 (2027), (2028), (2029), (2030),
			 (2032), (2033)$$,
	'Check contents of split outlines table after buildings comparison function has run'
);

--8------------------------------------------------------
-- split candidates supplied_outline_id
SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.split_candidates ORDER BY supplied_outline_id',
	$$VALUES (2011), (2012), (2013), (2014), (2015),
			 (2016), (2017), (2018), (2019), (2020),
			 (2021), (2022), (2023), (2024), (2025),
			 (2026), (2027), (2028), (2029), (2030),
			 (2032), (2033)$$,
	'Check supplied outlines of split candidates table after buildings comparison function has run'
);

--9------------------------------------------------------
-- split candidates building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_stage.split_candidates ORDER BY building_outline_id',
	$$VALUES (1027), (1027),
			 (1028), (1028), (1028),
 			 (1029), (1029), (1029), (1029),
			 (1030), (1030), (1030), (1030), (1030),
			 (1031), (1031), (1031), (1031), (1031), (1031),
			 (1032), (1032)$$,
	'Check current outlines of split candidates table after buildings comparison function has run'
);

--10----------------------------------------------------
-- check candidates supplied_outline_id

SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.check_candidates ORDER BY supplied_outline_id',
	$$VALUES (2002),
			 (2004)$$,
	'Check supplied outlines of check candidates table adter buildings comparison function has run'
);

--11--------------------------------------------------------
-- check_candidates building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_stage.check_candidates ORDER BY building_outline_id',
	$$VALUES (1003),
			 (1005)$$,
	'Check current outlines of check candidates table after buildings comparison function has run'
);

--12------------------------------------------------------
-- best_candidates supplied_outline_id

SELECT results_eq(
	'SELECT supplied_outline_id FROM buildings_stage.best_candidates ORDER BY supplied_outline_id',
	$$VALUES (2001),
			 (2031)$$,
	'Check supplied outlines of best candidates table after buildings comparison function has run'
);

--13-------------------------------------------------------
-- best_candidates building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_stage.best_candidates ORDER BY building_outline_id',
	$$VALUES (1001),
			 (1002)$$,
	'Check current outlines of best candidates table after buildings comparison function has run'
);

--------------------------------------------------------

-- Finish pgTAP testing
SELECT * FROM finish();

