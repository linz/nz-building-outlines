------------------------------------------------------------------------------
-- Provide unit testing for buildings_stage schema using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true


BEGIN;

SELECT plan(12);

-----------------------------------------------------------
-- New Buildings contents
CREATE TEMP TABLE test (id integer);
insert into test(id) values(2003);
insert into test(id) values(2010);

SELECT set_eq(
    'SELECT supplied_outline_id FROM buildings_stage.new ORDER BY supplied_outline_id',
    'SELECT * FROM test'
);

DROP TABLE test;

-----------------------------------------------------------
-- Removed Buildings contents
CREATE TEMP TABLE test (id integer);
insert into test(id) values(1004);
insert into test(id) values(1006);

SELECT set_eq(
    'SELECT building_outline_id FROM buildings_stage.removed ORDER BY building_outline_id',
    'SELECT * FROM test'
);

DROP TABLE test;

----------------------------------------------------------
-- Merged Buildings contents
CREATE TEMP TABLE test (id integer);
insert into test(id) values(2005);
insert into test(id) values(2006);
insert into test(id) values(2007);
insert into test(id) values(2008);
insert into test(id) values(2009);
insert into test(id) values(2033);

SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.merged ORDER BY supplied_outline_id',
	'SELECT * FROM test'
);

-----------------------------------------------------------
-- merge_candidates supplied_outline_id

SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.merge_candidates ORDER BY supplied_outline_id',
	'SELECT * FROM  test'
);

DROP TABLE test;

----------------------------------------------------------
-- merge_candidates building_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(1021);
insert into test(id) values(1022);
insert into test(id) values(1023);
insert into test(id) values(1024);
insert into test(id) values(1025);
insert into test(id) values(1026);
insert into test(id) values(1017);
insert into test(id) values(1016);
insert into test(id) values(1018);
insert into test(id) values(1019);
insert into test(id) values(1020);
insert into test(id) values(1012);
insert into test(id) values(1013);
insert into test(id) values(1014);
insert into test(id) values(1015);
insert into test(id) values(1009);
insert into test(id) values(1011);
insert into test(id) values(1032);
insert into test(id) values(1010);
insert into test(id) values(1033);
insert into test(id) values(1007);
insert into test(id) values(1008);

SELECT set_eq(
	'SELECT building_outline_id FROM buildings_stage.merge_candidates ORDER BY building_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

-------------------------------------------------------
-- Split Buildings contents
CREATE TEMP TABLE test (id integer);
insert into test(id) values(2011);
insert into test(id) values(2012);
insert into test(id) values(2013);
insert into test(id) values(2014);
insert into test(id) values(2015);
insert into test(id) values(2016);
insert into test(id) values(2017);
insert into test(id) values(2018);
insert into test(id) values(2019);
insert into test(id) values(2020);
insert into test(id) values(2021);
insert into test(id) values(2022);
insert into test(id) values(2023);
insert into test(id) values(2024);
insert into test(id) values(2025);
insert into test(id) values(2026);
insert into test(id) values(2027);
insert into test(id) values(2028);
insert into test(id) values(2029);
insert into test(id) values(2030);
insert into test(id) values(2032);
insert into test(id) values(2033);

SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.split ORDER BY supplied_outline_id',
	'SELECT * FROM test'
);

-------------------------------------------------------
-- split candidates supplied_outline_id
SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.split_candidates ORDER BY supplied_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

-------------------------------------------------------
-- split candidates building_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(1032);
insert into test(id) values(1030);
insert into test(id) values(1027);
insert into test(id) values(1031);
insert into test(id) values(1028);
insert into test(id) values(1029);

SELECT set_eq(
	'SELECT building_outline_id FROM buildings_stage.split_candidates ORDER BY building_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

-----------------------------------------------------
-- check candidates supplied_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(2004);
insert into test(id) values(2002);

SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.check_candidates ORDER BY supplied_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

---------------------------------------------------------
-- check_candidates building_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(1005);
insert into test(id) values(1003);

SELECT set_eq(
	'SELECT building_outline_id FROM buildings_stage.check_candidates ORDER BY building_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

-------------------------------------------------------
-- best_candidates supplied_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(2001);
insert into test(id) values(2031);

SELECT set_eq(
	'SELECT supplied_outline_id FROM buildings_stage.best_candidates ORDER BY supplied_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;

--------------------------------------------------------
-- best_candidates building_outline_id
CREATE TEMP TABLE test (id integer);
insert into test(id) values(1002);
insert into test(id) values(1001);

SELECT set_eq(
	'SELECT building_outline_id FROM buildings_stage.best_candidates ORDER BY building_outline_id',
	'SELECT * FROM test'
);

DROP TABLE test;
--------------------------------------------------------

-- Finish pgTAP testing
SELECT * FROM finish();

ROLLBACK;