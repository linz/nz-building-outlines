------------------------------------------------------------------------------
-- Provide unit testing for buildings_bulk_load functions using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true

SELECT buildings_bulk_load.bulk_load_outlines_insert(1, NULL, 1, 5, 1, 1, NULL, 1, '0106000020910800000100000001030000000100000005000000000000009FB33A4100000080BCB35441000000009FB33A4100000080AEB3544100000000D8B33A4100000080AEB3544100000000D8B33A4100000080BCB35441000000009FB33A4100000080BCB35441');

BEGIN;

CREATE EXTENSION IF NOT EXISTS pgtap;

SELECT plan(4);

-- Tests
--Bulk Load Outlines-------------------------
SELECT has_function('buildings_bulk_load', 'bulk_load_outlines_insert', 'Should have function bulk_load_outlines_insert in bulk_load stage schema.');
SELECT set_has(
    'SELECT bulk_load_outline_id FROM buildings_bulk_load.bulk_load_outlines',
    $$VALUES(1000001),
    		(2001)$$,
    'Check contents of supplied datasets table after supplied_datasets_insert function has run'
);

--Supplied Datasets-------------------------
SELECT has_function('buildings_bulk_load', 'supplied_datasets_insert', 'Should have function supplied_datasets_insert in bulk_load stage schema.');
SELECT set_has(
    'SELECT description, supplier_id FROM buildings_bulk_load.supplied_datasets',
    $$VALUES('test_dataset', 1)$$,
    'Check contents of supplied datasets table after supplied_datasets_insert function has run'
);


-- Finish pgTAP testing
SELECT * FROM finish();

ROLLBACK;
