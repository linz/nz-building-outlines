------------------------------------------------------------------------------
-- Provide unit testing for buildings_bulk_load schema using pgTAP
------------------------------------------------------------------------------

-- Turn off echo.
\set QUIET 1

-- Format the output nicely.
\pset format unaligned
\pset tuples_only true
\pset pager

-- Revert all changes on failure.
\set ON_ERROR_ROLLBACK 1
\set ON_ERROR_STOP true


BEGIN;

CREATE EXTENSION IF NOT EXISTS pgtap;

SELECT plan(7);

--1----------------------------------------------------------
-- Check function exists

SELECT has_function('buildings_bulk_load', 'compare_building_outlines', 'Should have function compare_building_outlines in buildings stage schema.');

--2----------------------------------------------------------
-- New Buildings contents

SELECT results_eq(
    'SELECT bulk_load_outline_id FROM buildings_bulk_load.added ORDER BY bulk_load_outline_id',
    $$VALUES (2003),
    		 (2010)$$,
    'Check contents of new buildings table after building comparison function has run'
);

--3----------------------------------------------------------
-- Removed Buildings contents

SELECT results_eq(
    'SELECT building_outline_id FROM buildings_bulk_load.removed ORDER BY building_outline_id',
    $$VALUES (1004),
    		 (1006)$$,
    'Check contents of removed buildings table after building comparison function has run'
);

--4----------------------------------------------------------
-- related bulk_load_outline_id

SELECT results_eq(
	'SELECT bulk_load_outline_id FROM buildings_bulk_load.related ORDER BY bulk_load_outline_id',
	$$VALUES (2005), (2005),
			 (2006), (2006), (2006), 
			 (2007), (2007), (2007), (2007),
			 (2008), (2008), (2008), (2008), (2008),
			 (2009), (2009), (2009), (2009), (2009), (2009),
			 (2011), (2012), (2013), (2014),
			 (2015), (2016), (2017), (2018),
			 (2019), (2020), (2021), (2022),
			 (2023), (2024), (2025), (2026),
			 (2027), (2028), (2029), (2030), (2032),
			 (2033), (2033), (2033)$$,
	'Check bulk load outlines of related table after buildings comparison function has run'
);

--5---------------------------------------------------------
-- related building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_bulk_load.related ORDER BY building_outline_id',
	$$VALUES (1007), (1008), (1009), (1010),
			 (1011), (1012), (1013), (1014),
			 (1015), (1016), (1017), (1018),
			 (1019), (1020), (1021), (1022),
			 (1023), (1024), (1025), (1026),
			 (1027), (1027),
			 (1028), (1028), (1028),
 			 (1029), (1029), (1029), (1029),
			 (1030), (1030), (1030), (1030), (1030),
			 (1031), (1031), (1031), (1031), (1031), (1031),
			 (1032), (1032), (1032),
			 (1033)$$,
	'Check current outlines of related table after buildings comparison function has run'
);

--6------------------------------------------------------
-- best_candidates bulk_load_outline_id

SELECT results_eq(
	'SELECT bulk_load_outline_id FROM buildings_bulk_load.matched ORDER BY bulk_load_outline_id',
	$$VALUES (2001), (2002),
			 (2004), (2031)$$,
	'Check supplied outlines of best candidates table after buildings comparison function has run'
);

--7-------------------------------------------------------
-- best_candidates building_outline_id

SELECT results_eq(
	'SELECT building_outline_id FROM buildings_bulk_load.matched ORDER BY building_outline_id',
	$$VALUES (1001), (1002),
			 (1003), (1005)$$,
	'Check current outlines of best candidates table after buildings comparison function has run'
);

--------------------------------------------------------

-- Finish pgTAP testing
SELECT * FROM finish();

