./buildings/gui/edit_dialog.py::14: Found layers -> ['(class QgsMapSettings) and setLayers() now work with list of layers instead of layer IDs']
./buildings/gui/edit_dialog.py::98: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/gui/edit_dialog.py::164: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/gui/edit_dialog.py::227: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/gui/edit_dialog.py::294: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/gui/edit_dialog.py::315: Found layers -> ['(class QgsMapSettings) and setLayers() now work with list of layers instead of layer IDs']
./buildings/gui/edit_dialog.py::346: Found clear -> ['(class QgsMapCanvas) has been removed. Use refresh() instead.']
./buildings/gui/edit_dialog.py::375: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']
./buildings/gui/edit_dialog.py::376: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']
./buildings/gui/edit_dialog.py::377: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']


*******************************************************************************
Found 10 API2 usages

Files with API2 usages:
./buildings/gui/edit_dialog.py -> 10 usages found


###############################################################################
NOTE:
This tool is based on a machine parsing of 
https://qgis.org/api/api_break.html so the result are as good as the 
information there. Also, being a simple parser, it just give an hint were to
look at. It is by no means a complete tool to find all the
possible API incompatibility.

Methods are matched just based on their names and not on their classes, 
so there might be various false positives.

