./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::35: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::41: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::51: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::52: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::53: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::54: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::55: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::56: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::69: Found instance -> ['(class QgsAuthManager) was removed in favor of QgsApplication::authManager() that returns an instance of the Auth Manager']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::71: Found layers -> ['(class QgsMapSettings) and setLayers() now work with list of layers instead of layer IDs']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::72: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::73: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']


*******************************************************************************
Found 12 API2 usages

Files with API2 usages:
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py -> 12 usages found


###############################################################################
NOTE:
This tool is based on a machine parsing of 
https://qgis.org/api/api_break.html so the result are as good as the 
information there. Also, being a simple parser, it just give an hint were to
look at. It is by no means a complete tool to find all the
possible API incompatibility.

Methods are matched just based on their names and not on their classes, 
so there might be various false positives.

./buildings/tests/gui/test_setup_check_dialog.py::14: Found dialog -> ['(class QgsAttributeDialog) was removed - just use the object directly.', '(class QgsProjectionSelectionWidget) has been removed']
./buildings/tests/gui/test_setup_check_dialog.py::26: Found dialog -> ['(class QgsAttributeDialog) was removed - just use the object directly.', '(class QgsProjectionSelectionWidget) has been removed']
./buildings/tests/gui/test_setup_check_dialog.py::48: Found dialog -> ['(class QgsAttributeDialog) was removed - just use the object directly.', '(class QgsProjectionSelectionWidget) has been removed']


*******************************************************************************
Found 3 API2 usages

Files with API2 usages:
./buildings/tests/gui/test_setup_check_dialog.py -> 3 usages found


###############################################################################
NOTE:
This tool is based on a machine parsing of 
https://qgis.org/api/api_break.html so the result are as good as the 
information there. Also, being a simple parser, it just give an hint were to
look at. It is by no means a complete tool to find all the
possible API incompatibility.

Methods are matched just based on their names and not on their classes, 
so there might be various false positives.

./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::35: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::41: Found actions -> ['(class QgsDataItem) now requires a new QWidget parent argument. Subclasses should ensure that returned items have been']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::51: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::52: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::53: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::54: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::55: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::56: Found isVisible -> ['(class QgsLayerTreeGroup) is moved to QgsLayerTreeNode', '(class QgsLayerTreeLayer) is moved to QgsLayerTreeNode']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::69: Found instance -> ['(class QgsAuthManager) was removed in favor of QgsApplication::authManager() that returns an instance of the Auth Manager']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::71: Found layers -> ['(class QgsMapSettings) and setLayers() now work with list of layers instead of layer IDs']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::72: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py::73: Found layer -> ['(class QgsPalLabeling) was removed. If direct access to QgsPalLayerSettings is necessary, use QgsPalLayerSettings::fromLayer()']


*******************************************************************************
Found 12 API2 usages

Files with API2 usages:
./buildings/tests/gui/test_setup_edit_attribute_bulk_load.py -> 12 usages found


###############################################################################
NOTE:
This tool is based on a machine parsing of 
https://qgis.org/api/api_break.html so the result are as good as the 
information there. Also, being a simple parser, it just give an hint were to
look at. It is by no means a complete tool to find all the
possible API incompatibility.

Methods are matched just based on their names and not on their classes, 
so there might be various false positives.

